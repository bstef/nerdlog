name: ci

on:
  push: # Run on push to any branch

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # For now commented due to issues,
          # see e.g. https://github.com/dimonomid/nerdlog/actions/runs/15097173410/job/42433388408
          # - macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Install deps (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt install -y libx11-dev

      - name: Install deps (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install gawk

      # This step is needed to make sure that we don't get extra output like
      # "go: downloading github.com/spf13/pflag v1.0.6" when running journalctl_mock,
      # since it ends up in the debug output from the script which we then compare
      # with the expected output.
      - name: Pre-download deps
        run: |
          go mod download
          ( cd cmd/journalctl_mock && go mod download )
      - name: Run tests
        run: make test

  release-please:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
    permissions:
      issues: write
      contents: write
      pull-requests: write
    steps:
      - id: release-please
        name: Release please
        uses: googleapis/release-please-action@v4
        with:
          release-type: go

  goreleaser:
    needs: release-please
    if: needs.release-please.outputs.releases_created == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.release-please.outputs.tag_name }}
      - name: Install syft
        uses: anchore/sbom-action/download-syft@v0
      - name: Setup Cosign CLI
        uses: sigstore/cosign-installer@v3
      - name: Install goreleaser
        run: |
          echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
          sudo apt update
          sudo apt install -y goreleaser libx11-dev
          goreleaser --version
      - id: semantic-release
        name: Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: goreleaser release --release-notes CHANGELOG.md --clean
